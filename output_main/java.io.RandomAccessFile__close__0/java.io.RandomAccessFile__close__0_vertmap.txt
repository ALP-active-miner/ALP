SocketChannel,82
FileReader.<init>,458
LexicalAnalyzer.nextToken(),587
String:The end of the file,189
HttpURLConnection.<cast>,421
FileNotFoundException,127
ArrayList,408
char:'\n',447
String:MappedByteBufferDemo01.PATH,329
String,1
Person.<init>,187
DataInput.readChar(),21
Scanner.nextLine(),306
double:2.5,435
Class.getResource(),258
Runtime,358
Print.print(),456
double:45612.23,642
String:a.txt,169
SplitFile,227
URL.openConnection(),423
Registro.leRegistro(),507
Character.load(),584
String.replaceAll(),121
char:'L',452
File.<init>,18
String:复制成功,70
FileLock.release(),223
LineNumberReader.<init>,461
ElementoIndice.setProximo(),308
+,212
FileLock.isValid(),220
-,111
Logger.error(),697
this.long,272
NumberFormat.getNumberInstance(),322
int:MapBuffer.start,646
UNKNOWN.get(),601
Base64.encode(),348
Thread:Thread,356
FileChannel.transferFrom(),218
MyIO.print(),325
Paths.get(),648
RandomAccessFile.setLength(),123
=,62
Texture.<init>,487
char:'n',475
RandomAccessFileTest.display(),382
ReadableByteChannel.read(),200
int:ByteReadWrite.INT_BYTES,666
char:'o',293
Random.<init>,492
File.isDirectory(),662
RandomAccessFile.<init>,3
AuditManager.getBySpecificTime(),570
PrintStream.printf(),159
this.MapMode,45
Path,647
RandomAccessFile.length(),30
URLConnection.getInputStream(),426
FileChannel.map(),48
char.<cast>,112
int:BufferedImage.TYPE_INT_RGB,398
<catch>,25
String:true,500
int[].arrayget(),232
ArrayList.<init>,246
byte[],17
Config.CRLF.length(),566
Audit,568
Throwable.addSuppressed(),512
FileChannel.lock(),211
this.CountDownLatch,403
double:47.01,677
char:'O',451
Charset.newDecoder(),349
DnBuilder.BuildTable(),71
Long.<init>,706
char:'G',305
char:'h',331
DataInputStream.<init>,389
<throw>,431
File.exists(),252
System.nanoTime(),256
UNKNOWN.compact(),599
Table.toString(),74
param:File,91
Class:FileChannelToSocketChannelDemo.class,608
UNKNOWN.hasRemaining(),600
this.byte[],383
File[],265
FileSystem,59
HaffManUtils.encryptFile(),407
this.PrintStream,13
interface_FileSaver,133
List,248
BufferedImage.createGraphics(),400
Charset.defaultCharset(),341
param:Object,610
int:48,195
char:'H',490
char:'i',476
DataInput.readUTF(),170
{Texture},485
File.getAbsoluteFile(),167
double:47.0000000000001,190
byte[].length,466
SplitFile.mergeFile(),226
ElementoIndice,312
HuffmanCoding.compressFile(),695
String.valueOf(),554
File.lastModified(),650
this.Random,604
this.PathFile,511
FileChannel.write(),504
Object.getClass(),683
Scanner,216
char:'I',450
ElementoIndice.setCep(),309
StringBuilder,337
double:12.2,667
byte[].arrayset(),233
param:Context,242
Math.min(),28
this.String,51
Runtime.getRuntime(),357
LineNumberReader,462
LexicalAnalyzer,595
double:1.0,615
CharsetDecoder.decode(),351
FileHole.putData(),364
VentanaDepart.<init>,627
double:1.1,678
param:InputStream,467
int:20,229
char:'k',477
URL.toURI(),257
double:432.432,93
UsingRandomAccessFile.print(),438
Objects.isNull(),418
BufferedReader.readLine(),177
DataOutput.writeFloat(),98
char:'J',530
ComparaCEP.<init>,378
int:255,415
VentanaDepart.setVisible(),625
StringBuilder.<init>,340
UNKNOWN.info(),439
UsingRandomAccess.display(),209
SecurityException,656
ByteBuffer,198
Adler32,546
Endereco,657
ByteBuffer.put(),39
String[].arrayset(),307
DataOutput.writeByte(),502
DownloadThread.getFilePath(),523
int:10,52
SplitFile.<init>,230
Save.<init>,583
char:'l',330
ImageIO.read(),411
char:'C',302
Collections.sort(),658
char:'d',141
LexicalAnalyzer.<init>,596
String:rws,164
Token,593
String:utf-8,277
SocketChannel.connect(),87
double:48.123,432
Iterator.next(),244
DataInput.readBoolean(),367
Iterable.iterator(),249
Integer.toString(),188
double.<cast>,663
String.startsWith(),676
FileOutputStream.<init>,157
Adler32.<init>,545
List.get(),561
URL.<init>,427
JFrame,626
Graphics.dispose(),399
double:3.1415926,503
File.mkdirs(),535
DataOutput.writeBoolean(),95
WordInDocument,520
DataOutput.writeChars(),53
Class:NIOClient.class,88
Log.d(),498
LexicalAnalayzer.<init>,651
InputStream.available(),527
char:'D',301
byte,40
String:,78
char:'e',147
Context.getFilesDir(),243
Document.lineIterable(),680
Path.toFile(),649
RandomAccessFile,8
MyIO.println(),235
Math.abs(),372
{ByteBuffer},639
Class:BufferRead.class,682
NumberFormat.format(),324
Byte,644
Arrays.equals(),63
<a>,125
this.File,131
Person,186
Integer.toHexString(),261
char:'E',300
char:'f',146
ByteArrayOutputStream.toByteArray(),297
interface_C6880a,471
URI,260
URL,81
FileChannel.tryLock(),280
Channels.newChannel(),565
ElementoIndice.<init>,313
RandomAccessFile.getFD(),480
String:NioTest9.txt,49
InputStreamReader.<init>,176
Solution.convertByteToString(),696
String:FileUtil.TAG,499
char:'g',472
String.<init>,38
Math.random(),276
String.format(),346
double:123.0,654
char:'F',299
FileUtils.readLong(),579
URLConnection,425
Graphics2D,401
Lab01_02.reverseCopying(),636
String.substring(),675
Buffer.clear(),201
Reader.skip(),457
File.deleteOnExit(),444
BufferedReader,178
Connection.read(),361
double:12.123,494
double:12.3456789,690
Thread.sleep(),150
this.Character,578
String[],101
Format.format(),621
DataOutput.writeLong(),203
char:'\r',241
Random,493
File.getAbsolutePath(),347
GatheringByteChannel.write(),640
Connection.close(),402
UsingRandomAccessFile.display(),191
File.getParentFile(),624
Class:XLoad.class,699
double:15.5,420
RuntimeException.<init>,430
StringBuffer.<init>,519
PathFile.<init>,513
Charset.decode(),338
ByteBuffer[],638
String:ms,225
char[].arrayget(),143
HuffmanCoding.<init>,694
char:'a',43
PrintStream.print(),57
{String},103
param:String[],65
int:GZIPInputStream.GZIP_MAGIC,491
String:r,34
boolean:true,126
File.delete(),60
ArrayList.add(),531
Iterator.hasNext(),247
String:,327
Object.<init>,217
this.Server.PORT,281
this.int,148
FileOutputStream,155
String.toCharArray(),543
Integer.parseInt(),29
FileNotFoundException|IOException,563
param:RandomAccessFile,607
Throwable,470
EquipmentSave.save(),574
Save,585
Date.<init>,618
DataInput.readLine(),11
int:Integer.MAX_VALUE,210
Registro.terminaCom(),539
File,16
FileSystem.<init>,58
param:long,122
Math.floor(),237
ByteBuffer.putChar(),328
ByteBuffer.compact(),536
ThreadLocalRandom.current(),374
DataOutputStream,448
String:',516
FileWriter,549
char:' ',446
char:'A',304
char:'b',42
String:UsingRandomAccessFile.path,168
Reader.read(),550
SimpleDateFormat.<init>,620
String:,175
param:byte[],129
InputStream.read(),153
File.createTempFile(),61
ClassLoader,85
Character.toUpperCase(),124
Endereco.leEndereco(),661
OutputStream.write(),154
String.getBytes(),19
Token.getAttribute_value(),594
FileInputStream.<init>,152
Class:FileOperations.class,345
char:'c',142
InputStreamReader,174
String:rtest.dat,192
String::,139
char:'!',465
char:'B',303
Sytem.exit(),445
SeekableByteChannel.size(),68
ByteBuffer.allocate(),197
Arrays.asList(),318
String:5,559
Object.toString(),117
ClassLoader.getResource(),84
param:String,26
interface_ContentClient,671
UNKNOWN,76
<break>,151
String:/,685
FileLock.overlaps(),360
String:0,687
Random.nextDouble(),526
FileWriter.<init>,548
float:1.21f,495
Audit.getCreated_at(),572
boolean:false,64
InetSocketAddress,89
Long.parseLong(),541
String:rw,5
OutputStream,635
double:1.41,369
URL.getFile(),79
this.Logger,698
double:1.44,239
Document,522
DataSource.close(),553
double:1.111,333
PATHCREATE:PATHCREATE,397
Conf.getExeOffset(),287
String.indexOf(),691
DataInput.readByte(),114
long:Long.MAX_VALUE,622
Class.getName(),179
this.Texture[],486
Metodos,106
Date.getTime(),616
DataInput.readLong(),416
this.EquipmentSave,575
UsinRandomAccessFile.display(),655
byte[].arrayget(),156
Class:MemoryMappedFileInJava.class,609
FileTest.display(),275
WritableByteChannel,564
double:122.33,368
ByteBuffer.allocateDirect(),366
System.gc(),606
ByteArrayOutputStream.<init>,298
DataSource,556
MipsCompiler.<init>,289
String:RandomAccessFileTest2.PATH,669
InetSocketAddress.<init>,86
BufferedImage.getRGB(),412
Logger.getLogger(),181
PrintWriter.println(),590
double:14.95,700
double:3.14159,161
User.<init>,632
Scanner.<init>,215
SeekableByteChannel.position(),295
File.mkdir(),533
Metodos.escribeRandom(),102
String:Value,207
RandomAccessFile.seek(),9
int:Database.MB,375
Scanner.nextInt(),586
this.Config.CRLF,567
DataOutput.writeUTF(),12
CharBuffer,343
NumberFormat.setMinimumFractionDigits(),323
Arrays.sort(),370
float:1.0f,614
double[].arrayget(),701
Logger,180
Buffer.flip(),196
Class:FileChannelDemo.class,259
Texture,488
long,22
PrintWriter.<init>,592
CharSequence.length(),0
Exception.<init>,672
DataOutput.write(),14
DataOutputStream.<init>,449
Registro.<init>,506
this.UNKNOWN,384
MappedByteBuffer.load(),264
LineNumberReader.getLineNumber(),460
interface_Runnable,528
Context,214
OutputStreamWriter.<init>,443
StopWatch.stop(),483
Charset,339
int[],105
IOException,15
double:1.11,417
_02RandomAccessFile.dispaly(),332
UNKNOWN.getLogfilePath(),336
StringBuffer,518
ByteBuffer.putInt(),597
DnBuilder,73
Logger.log(),182
OutputStreamWriter,442
Metodos.leerRandom(),109
MappedByteBuffer.force(),419
FileLock.isShared(),221
double:47.001,271
double:88.08,274
UseRandomAccessFile.display(),441
double:47.000,377
User.getAge(),634
String:Main.FILE_PATH,602
double:47.0008,436
int:1000,162
RenderedImage.getHeight(),414
double:47.0001,140
int:6,222
Integer.toBinaryString(),413
int:5,35
<continue>,240
char:'X',674
int:4,108
char:'y',478
int:3,44
Buffer.array(),270
int:9,294
int:8,138
int:7,165
MyIO.readDouble(),238
int:2,10
int:1,31
int:0,32
DataInput.readFully(),56
File.length(),23
Adler32.update(),547
FileNotFoundException|IOException.printStackTrace(),562
double:3.14,205
double:1.77,440
this.Level,185
Collection.add(),245
char:'8',316
run(),359
char:'Y',532
char:'z',315
Long,116
ImageIO.write(),394
UNKNOWN.allocate(),603
Class.getClassLoader(),90
DataOutput.writeInt(),99
String.trim(),388
Class,684
FileGenerator.convertByte(),392
BufferedReader.<init>,172
this.Locale,326
Charset.forName(),352
CharSequence.charAt(),668
double:12.95,703
BufferedImage,395
int:1024,149
MipsCompiler.compileLine(),288
char:'9',496
HttpURLConnection,422
char:'Z',464
double:1.414,137
Iterator,250
String:UTF-8,20
ThreadLocalRandom,373
{double},705
FileReader,459
Util.generate(),525
String:NioTest10.txt,213
String:raf.txt,268
CaseConf.getInstance(),335
<nullcheck>,120
String:localhost,282
IntercalaArquivos.intercala(),379
Registro.getEmail(),540
ByteBuffer.get(),194
CharsetDecoder,350
AutoCloseable.close(),7
this.RandomAccessFile,342
Registro,505
InputStream,424
RandomAccessFile.getFilePointer(),204
File.getName(),692
ByteArrayOutputStream,296
RenderedImage.getWidth(),410
ElementoIndice.setHashCode(),310
Integer,319
UNKNOWN.readLine(),463
PrefixTabStr.clear(),77
NumberFormat,321
FileUtils.readInt(),580
ByteBuffer.getChar(),612
Metodos.<init>,107
ByteBuffer.getInt(),665
int:200,269
File.createNewFile(),202
SplitFile.split(),228
WritableByteChannel.write(),291
long:0L,54
DownloadThread,524
UNKNOWN.flip(),598
char:'T',454
float:432.4f,100
char:'u',292
User.getLastName(),631
FileLock,219
CountDownLatch.countDown(),404
param:byte,434
FileUtils.writeInt(),576
double:1000.0,623
double,135
String::,208
Class:TestFile.class,184
{File},266
AbstractStringBuilder.append(),497
MappedByteBuffer.isLoaded(),263
Thread.<init>,355
FileInputStream,158
P3Utils.validateDocumentFile(),679
RandomAccessFile.read(),36
FileUtils.writeLong(),577
Object.equals(),363
Buffer.limit(),405
Assert.isTrue(),558
MappedByteBuffer,47
char:'4',641
XunThread.<init>,284
char:'U',453
AbstractStringBuilder.setLength(),517
String[].arrayget(),27
char:'v',97
HuffmanCoding,693
int[].arrayset(),371
PathFile.getPath(),510
Token.getName(),588
interface_java.io.Serializable,385
int:SIZE,542
MyIO.readInt(),236
Audit.getAction_user(),569
int:100,206
interface_Serializable,273
MipsCompiler,290
LexicalAnalayzer.nextToken(),652
<r>,67
C6882b.m31253a(),469
UNKNOWN.equals(),589
BufferedImage.<init>,393
Endereco.<init>,660
DnBuilder.<init>,75
System.getProperty(),253
Buffer.position(),317
this.PlatformConst.ID_EQUIPMENT,534
Document.<init>,521
LexicalAnalayzer,653
FileChannel.force(),605
char:'5',386
char:'V',529
{byte},33
this.InputStream,173
Number.longValue(),707
PrintWriter,591
DataOutput.writeChar(),96
Table,72
long.<cast>,581
FileDescriptor.sync(),482
FileChannel,50
Throwable.printStackTrace(),113
FileSystem.writeFileSystem(),66
System.currentTimeMillis(),163
double:1e6,255
Endereco.escreveEndereco(),659
param:List,681
<return>,92
Writer.write(),551
Thread,354
char:'x',279
Class:ZeroCopyTest.class,224
int:50,110
char,24
double:3000.00,334
UsingRandomAccessFile,437
Out.log(),557
double:1.1465,387
Math.round(),637
IOException.<init>,538
String:test.txt,80
ElementoIndice.escreve(),311
double:1.23456789,166
Appendable.append(),344
Buffer.rewind(),664
DataInput.readInt(),160
PrintStream.println(),2
Texture[].arrayset(),489
double:12.34,509
double:1.01,689
File.getPath(),365
Throwable.getMessage(),234
String:hello world,391
ElementoIndice.setNumReg(),314
double:9.95,702
EOFException,409
Registro.escreveRegistro(),508
UUID,118
FileDataSource.<init>,555
interface_BenchmarkFileReader,670
interface_IReadStrategy,171
{int},104
StopWatch.start(),484
param:OutputStream,468
:null,132
ByteBuffer.putLong(),611
String.replace(),514
DataOutput.writeDouble(),94
JFrame.<init>,629
int:MapBuffer.size,645
RandomAccessFile.getChannel(),46
FileOutputStream.getChannel(),537
EquipmentSave.load(),582
double:0.1d,128
String.split(),515
ComparaCEP,380
DataInput.readDouble(),136
byte.<cast>,41
null:null,183
XunThread.join(),285
Byte.<init>,688
char:'r',479
UUID.randomUUID(),119
String:false,501
File[].arrayget(),267
Checksum.getValue(),544
URL.getPath(),686
Audit.getDescription(),571
DataInput.skipBytes(),193
double:1.11111D,381
Herramientas.convertUTF(),320
User,633
int:300,254
{char},145
XunThread.start(),286
param:int[],473
SocketChannel.open(),83
double:5.3,673
DataOutput.writeBytes(),6
double:1.1111111,560
RuntimeException,429
char:'s',262
URLConnection.setRequestProperty(),428
DataSource.getNext(),552
Long.valueOf(),115
char:'R',455
ByteBuffer.wrap(),433
Buffer.hasRemaining(),199
User.getFirstName(),630
param:int,134
Character.save(),573
DataInputStream,390
VentanaDepart,628
Graphics.drawString(),396
int,4
Exception,37
FileDescriptor,481
Date,617
char[],144
this.Connection,362
Arrays.toString(),613
int.<cast>,55
boolean,130
char:'S',643
double[],704
Runtime.addShutdownHook(),353
char:'t',474
Collection.size(),251
Random.nextInt(),376
HaffManUtils.decryptFile(),406
FileChannel.transferTo(),69
XunThread,283
int:97,231
int:98,278
SimpleDateFormat,619
